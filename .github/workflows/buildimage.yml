name: Build New Release

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:


jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Install Required Packages
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y mount \
          kpartx \
          sudo \
          bash \
          e2fsprogs \
          wget \
          xz-utils \
          util-linux

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: 'src'

      - name: Build Docker Image
        run: |
          docker build -t build-img:1.0 src/docker/.

      - name: Create Loopback Device
        run: |
          wget -v -O pi-bot.img.xz https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          xz -vd pi-bot.img.xz
          echo "LOOPBACK=$(losetup -f)" >> $GITHUB_ENV
          losetup -v ${{ env.LOOPBACK }} pi-bot.img
          kpartx -av ${{ env.LOOPBACK }}
          echo "PI_ROOT=/dev/mapper/$(basename ${{ env.LOOPBACK }})p2" >> $GITHUB_ENV


      - name: Build Pi Image
        run: |
          docker run --rm -it --privileged \
          -e PI_ROOT=${{ env.PI_ROOT }}
          --platform linux/arm/v7 \
          --device ${{ env.PI_ROOT }}:${{ env.PI_ROOT }} \
          -v src:/src \
          build-img:1.0

      - name: Get Release Details
        run: |
          mv extra/config.txt config
          TITLE=$(head -n 1 extra/changelog.txt)
          echo "RELEASE_TITLE=$TITLE" >> $GITHUB_ENV
          CHANGELOG=$(cat extra/changelog.txt)
          echo "$CHANGELOG"
          rm -f stage2/EXPORT*
          rm -rf stage3
          rm -rf stage4
          rm -rf stage5
          chmod -R +x post-stage

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Alpha
          release_name: Alpha ${{ env.RELEASE_TITLE }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false

      - name: Add Image to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deploy/release.img.xz
          asset_name: switch-pibot-${{ env.RELEASE_TITLE }}.img
          asset_content_type: application/octet-stream
