name: Build New Release

on:
  push:
    branches:
      - '**'
  workflow_dispatch:


jobs:
  build-image:
    runs-on: self-hosted
    permissions:
      contents: write
      packages: write
    steps:
      - name: Cleanup Build Folder
        run: |
          for LOOPDEV in /dev/loop3 /dev/loop4; do
            if losetup $LOOPDEV >/dev/null 2>&1; then
              echo "Detaching $LOOPDEV"
              sudo losetup -d $LOOPDEV
            else
              echo "$LOOPDEV does not exist or is not in use"
            fi
          done
          rm -rf ./*.img
          rm -rf ./*.img.xz
          rm -rf ./src
          rm -rf ./finalsize

      - name: Install Required Packages
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y mount \
          sudo \
          bash \
          e2fsprogs \
          wget \
          xz-utils \
          util-linux \
          qemu-user-static \
          docker \
          docker.io \
          containerd

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: 'src'

      - name: Build Docker Image
        run: |
          update-binfmts --enable qemu-arm
          update-binfmts --enable qemu-aarch64
          docker build --platform linux/arm/v7 -t build-img:1.0 ./src/docker/.

      - name: Create Loopback Device
        run: |
          wget -O base.img.xz https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          xz -vd base.img.xz
          dd if=/dev/zero of=pi-bot.img bs=1M count=3900
          losetup -v /dev/loop3 pi-bot.img
          losetup -v /dev/loop4 base.img
          dd if=/dev/loop4 of=/dev/loop3
          parted /dev/loop3 --script -- resizepart 2 100%
          e2fsck -yf /dev/loop3p2
          resize2fs /dev/loop3p2

      - name: Build Pi Image
        run: |
          mkdir -p finalsize
          docker run --rm -it --privileged \
          -e PI_ROOT=/dev/loop3p2
          --platform linux/arm/v7 \
          -v /dev/loop3p2:/dev/loop3p2 \
          -v src:/src \
          -v finalsize:/finalsize \
          build-img:1.0

      - name: Shrink Image
        run: |
          MIN_SIZE=$(cat finalsize/bytes)
          PARTED_SIZE=$(($MIN_SIZE / 1024 / 1024))M
          parted /dev/loop3 --script resizepart 2 $PARTED_SIZE
          END_SECTOR=$(fdisk -l /dev/loop3 | grep /dev/loop3p2 | awk '{print $3}'
          IMG_SIZE=$(($END_SECTOR * 512))
          truncate --size=$IMG_SIZE pi-bot.img

      - name: Get Release Details
        run: |
          CHANGELOG=$(cat src/changelog.txt)
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV
          TITLE=$(head -n 1 ${{ env.CHANGE }})
          echo "RELEASE_TITLE=$TITLE" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Alpha
          release_name: Alpha ${{ env.RELEASE_TITLE }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false

      - name: Add Image to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pi-bot.img
          asset_name: switch-pibot-${{ env.RELEASE_TITLE }}.img
          asset_content_type: application/octet-stream
